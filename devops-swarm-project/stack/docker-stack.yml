version: "3.9"

networks:
  webnet:
    driver: overlay
    attachable: true

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.network=webnet"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--accesslog=true"
      - "--log.level=INFO"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /vagrant/logs/traefik:/var/log/traefik
    networks:
      - webnet
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

  web:
    image: idishui/web-demo:latest
    networks:
      - webnet
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      labels:
        traefik.enable: "true"
        traefik.docker.network: "webnet"
        traefik.http.routers.web.rule: "Host(`web.local`)"
        traefik.http.routers.web.entrypoints: "web"
        traefik.http.services.web.loadbalancer.server.port: "80"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    volumes:
      - /vagrant/logs/web:/var/log/web
